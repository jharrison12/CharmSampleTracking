# Generated by Django 4.2.3 on 2023-09-22 01:00

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line_1', models.CharField(default='', max_length=255)),
                ('address_line_2', models.CharField(default='', max_length=255)),
                ('city', models.CharField(default='', max_length=255)),
                ('state', models.CharField(default='MI', max_length=2)),
                ('zip_code', models.CharField(default='', max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='AddressMove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_move_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='AgeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_category', models.CharField(choices=[('EC', 'Early Childhood'), ('MC', 'Middle Childhood'), ('LC', 'Late Childhood')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Assent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assent_text', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Caregiver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charm_project_identifier', models.CharField(default='', max_length=6, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('ewcp_participant_identifier', models.CharField(default='', max_length=16)),
                ('participation_level_identifier', models.CharField(default='', max_length=2)),
                ('echo_pin', models.CharField(default='', max_length=3)),
                ('specimen_id', models.CharField(max_length=4, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverAddressHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision_number', models.IntegerField()),
                ('revision_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverBiospecimen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biospecimen_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverChildRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_type', models.CharField(choices=[('PR', 'Primary'), ('SD', 'Secondary'), ('IN', 'Inactive')], default='PR', max_length=2)),
                ('date_change', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision_number', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('C', 'Current'), ('A', 'Archived')], default='C', max_length=1)),
                ('eff_start_date', models.DateTimeField()),
                ('eff_end_date', models.DateTimeField(default=datetime.datetime(2999, 12, 31, 0, 0, 0, 127325, tzinfo=datetime.timezone.utc))),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverPersonalContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caregiver_contact_type', models.CharField(choices=[('PR', 'Primary'), ('SD', 'Secondary'), ('IN', 'Inactive')], default='PR', max_length=2)),
                ('date_change', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_type', models.CharField(choices=[('PR', 'Primary'), ('SD', 'Secondary'), ('IN', 'Inactive')], default='PR', max_length=2)),
                ('date_change', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverSocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_media_user_name', models.CharField(max_length=255)),
                ('social_media_consent', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverSocialMediaHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_media_user_name', models.CharField(max_length=255)),
                ('social_media_consent', models.BooleanField(default=True)),
                ('revision_number', models.IntegerField()),
                ('revision_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CaregiverSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_completion_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charm_project_identifier', models.CharField(max_length=8, unique=True)),
                ('birth_date', models.DateField(null=True)),
                ('birth_sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('child_interviewer_comments', models.TextField()),
                ('child_twin', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ChildAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ChildAddressHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision_number', models.IntegerField(default=0)),
                ('revision_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='ChildAssent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assent_date', models.DateField(default=django.utils.timezone.now)),
                ('assent_boolean', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChildAssentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assent_date', models.DateField(default=django.utils.timezone.now)),
                ('assent_boolean', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChildBiospecimen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_date', models.DateField(default=django.utils.timezone.now)),
                ('kit_sent_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChildName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision_number', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('C', 'Current'), ('A', 'Archived')], max_length=1)),
                ('effective_start_date', models.DateField(default=django.utils.timezone.now)),
                ('effective_end_date', models.DateField(default=datetime.date(2099, 12, 31))),
            ],
        ),
        migrations.CreateModel(
            name='ChildSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_completion_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_type', models.CharField(max_length=255)),
                ('collection_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConsentContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='ConsentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_boolean', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConsentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_type_text', models.CharField(choices=[('MTHR_UR', 'Mother Urine'), ('MTHR_BLD', 'Mother Blood'), ('MTHR_PLCNT', 'Mother Placenta'), ('MTHR_NL_HR_UR', 'Mother Nail Hair Urine'), ('BIRTH_CERT', 'Birth Certificate'), ('MDHHS', 'Michigan Department of Health and Human Services'), ('CHLD_POOP', 'Child Poop'), ('CHLD_TEETH', 'Child Teeth'), ('SRV_HOME', 'Serve Home'), ('ADDRS_B', 'Address B'), ('CHILD_BLD', 'Child Blood'), ('INFO_SHARE', 'Information Sharing'), ('ADDRESS', 'Address'), ('DNA', 'DNA'), ('OTH_STUDY', 'Other Study'), ('UOFM', 'University of Michigan'), ('SCL_MEDIA', 'Social Media')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ConsentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_version', models.CharField(max_length=255, unique=True)),
                ('consent_version_text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ethnicity', models.CharField(choices=[('H', 'Hispanic'), ('N', 'Non-Hispanic'), ('U', 'Unknown')], default='U', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Incentive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incentive_date', models.DateField(default=django.utils.timezone.now)),
                ('incentive_amount', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncentiveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incentive_type_text', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mother',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(max_length=255)),
                ('nick_name', models.CharField(max_length=255)),
                ('maiden_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='NonPrimaryCaregiver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_code', models.CharField(max_length=3)),
                ('phone_number', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race', models.CharField(choices=[('I', 'American Indian or Alaska Native'), ('A', 'Asian'), ('B', 'Black or African American'), ('P', 'Native Hawaiian or Other Pacific Islander'), ('W', 'White'), ('U', 'Unknown')], default='U', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_media_name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SurveyOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_outcome_text', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_name', models.CharField(max_length=255, unique=True)),
                ('project_fk', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.project')),
            ],
        ),
        migrations.CreateModel(
            name='Recruitment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recruitment_date', models.DateField(default=django.utils.timezone.now)),
                ('interviewer_comment', models.TextField(blank=True, null=True)),
                ('caregiver_fk', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver')),
                ('healthcare_facility_fk', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.healthcarefacility')),
                ('incentive_fk', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.incentive')),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryCaregiver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caregiver_fk', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver')),
            ],
        ),
        migrations.CreateModel(
            name='Pregnancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregnancy_id', models.CharField(max_length=255, unique=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('last_menstrual_period', models.DateField(blank=True, null=True)),
                ('gestational_age_at_birth', models.CharField(max_length=255)),
                ('mother_fk', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.mother')),
            ],
        ),
        migrations.AddConstraint(
            model_name='phone',
            constraint=models.UniqueConstraint(fields=('area_code', 'phone_number'), name='phone_unique_constraint'),
        ),
        migrations.AddField(
            model_name='nonprimarycaregiver',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='nonprimarycaregiver',
            name='child_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.child'),
        ),
        migrations.AddField(
            model_name='mother',
            name='caregiver_fk',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='incentive',
            name='incentive_type_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.incentivetype'),
        ),
        migrations.AddField(
            model_name='consentitem',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='consentitem',
            name='consent_type_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.consenttype'),
        ),
        migrations.AddField(
            model_name='consentcontract',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='consentcontract',
            name='consent_version_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.consentversion'),
        ),
        migrations.AddConstraint(
            model_name='collection',
            constraint=models.UniqueConstraint(fields=('collection_type', 'collection_number'), name='collection_unique_constraint'),
        ),
        migrations.AddField(
            model_name='childsurvey',
            name='child_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.child'),
        ),
        migrations.AddField(
            model_name='childsurvey',
            name='incentive_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dataview.incentive'),
        ),
        migrations.AddField(
            model_name='childsurvey',
            name='survey_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.survey'),
        ),
        migrations.AddField(
            model_name='childsurvey',
            name='survey_outcome_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.surveyoutcome'),
        ),
        migrations.AddField(
            model_name='childname',
            name='child_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.child'),
        ),
        migrations.AddField(
            model_name='childname',
            name='name_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.name'),
        ),
        migrations.AddField(
            model_name='childbiospecimen',
            name='age_category_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.agecategory'),
        ),
        migrations.AddField(
            model_name='childbiospecimen',
            name='child_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.child'),
        ),
        migrations.AddField(
            model_name='childbiospecimen',
            name='collection_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.collection'),
        ),
        migrations.AddField(
            model_name='childbiospecimen',
            name='incentive_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dataview.incentive'),
        ),
        migrations.AddField(
            model_name='childbiospecimen',
            name='status_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.status'),
        ),
        migrations.AddField(
            model_name='childassenthistory',
            name='assent_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.assent'),
        ),
        migrations.AddField(
            model_name='childassenthistory',
            name='child_assent_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.childassent'),
        ),
        migrations.AddField(
            model_name='childassent',
            name='assent_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.assent'),
        ),
        migrations.AddField(
            model_name='childassent',
            name='child_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.child'),
        ),
        migrations.AddField(
            model_name='childaddresshistory',
            name='address_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.address'),
        ),
        migrations.AddField(
            model_name='childaddresshistory',
            name='child_address_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.childaddress'),
        ),
        migrations.AddField(
            model_name='childaddresshistory',
            name='child_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.child'),
        ),
        migrations.AddField(
            model_name='childaddress',
            name='address_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.address'),
        ),
        migrations.AddField(
            model_name='childaddress',
            name='child_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.child'),
        ),
        migrations.AddField(
            model_name='child',
            name='birth_hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.healthcarefacility'),
        ),
        migrations.AddField(
            model_name='child',
            name='ethnicity_fk',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dataview.ethnicity'),
        ),
        migrations.AddField(
            model_name='child',
            name='pregnancy_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.pregnancy'),
        ),
        migrations.AddField(
            model_name='child',
            name='primary_care_giver_fk',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='dataview.primarycaregiver'),
        ),
        migrations.AddField(
            model_name='child',
            name='race_fk',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dataview.race'),
        ),
        migrations.AddField(
            model_name='caregiversurvey',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregiversurvey',
            name='incentive_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dataview.incentive'),
        ),
        migrations.AddField(
            model_name='caregiversurvey',
            name='survey_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.survey'),
        ),
        migrations.AddField(
            model_name='caregiversurvey',
            name='survey_outcome_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.surveyoutcome'),
        ),
        migrations.AddField(
            model_name='caregiversocialmediahistory',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregiversocialmediahistory',
            name='caregiver_social_media_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiversocialmedia'),
        ),
        migrations.AddField(
            model_name='caregiversocialmediahistory',
            name='social_media_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.socialmedia'),
        ),
        migrations.AddField(
            model_name='caregiversocialmedia',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregiversocialmedia',
            name='social_media_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.socialmedia'),
        ),
        migrations.AddField(
            model_name='caregiverphone',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregiverphone',
            name='phone_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.phone'),
        ),
        migrations.AddField(
            model_name='caregiverpersonalcontact',
            name='address_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.address'),
        ),
        migrations.AddField(
            model_name='caregiverpersonalcontact',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregiverpersonalcontact',
            name='email_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.email'),
        ),
        migrations.AddField(
            model_name='caregiverpersonalcontact',
            name='name_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.name'),
        ),
        migrations.AddField(
            model_name='caregiverpersonalcontact',
            name='phone_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.phone'),
        ),
        migrations.AddField(
            model_name='caregivername',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregivername',
            name='name_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.name'),
        ),
        migrations.AddField(
            model_name='caregiveremail',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregiveremail',
            name='email_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.email'),
        ),
        migrations.AddField(
            model_name='caregiverchildrelation',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregiverchildrelation',
            name='child_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.child'),
        ),
        migrations.AddField(
            model_name='caregiverchildrelation',
            name='relation_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.relation'),
        ),
        migrations.AddField(
            model_name='caregiverbiospecimen',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregiverbiospecimen',
            name='collection_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.collection'),
        ),
        migrations.AddField(
            model_name='caregiverbiospecimen',
            name='incentive_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dataview.incentive'),
        ),
        migrations.AddField(
            model_name='caregiverbiospecimen',
            name='status_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.status'),
        ),
        migrations.AddField(
            model_name='caregiveraddresshistory',
            name='address_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.address'),
        ),
        migrations.AddField(
            model_name='caregiveraddresshistory',
            name='caregiver_address_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiveraddress'),
        ),
        migrations.AddField(
            model_name='caregiveraddresshistory',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregiveraddress',
            name='address_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.address'),
        ),
        migrations.AddField(
            model_name='caregiveraddress',
            name='caregiver_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.caregiver'),
        ),
        migrations.AddField(
            model_name='caregiver',
            name='ethnicity_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.ethnicity'),
        ),
        migrations.AddField(
            model_name='caregiver',
            name='race_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.race'),
        ),
        migrations.AddField(
            model_name='addressmove',
            name='address_fk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataview.address'),
        ),
        migrations.AddConstraint(
            model_name='address',
            constraint=models.UniqueConstraint(fields=('address_line_1', 'address_line_2', 'city', 'state', 'zip_code'), name='address_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='recruitment',
            constraint=models.UniqueConstraint(fields=('caregiver_fk', 'healthcare_facility_fk'), name='recruitment_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='pregnancy',
            constraint=models.UniqueConstraint(fields=('mother_fk', 'pregnancy_id'), name='pregnancy_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='nonprimarycaregiver',
            constraint=models.UniqueConstraint(fields=('child_fk', 'caregiver_fk'), name='non_primary_caregiver_fk'),
        ),
        migrations.AddConstraint(
            model_name='consentcontract',
            constraint=models.UniqueConstraint(fields=('caregiver_fk', 'consent_version_fk'), name='consent_contract_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='childsurvey',
            constraint=models.UniqueConstraint(fields=('child_fk', 'survey_fk'), name='child survey unique constraint'),
        ),
        migrations.AddConstraint(
            model_name='childbiospecimen',
            constraint=models.UniqueConstraint(fields=('child_fk', 'collection_fk', 'age_category_fk'), name='child biospeciment unique constraint'),
        ),
        migrations.AddConstraint(
            model_name='childassent',
            constraint=models.UniqueConstraint(fields=('child_fk', 'assent_fk'), name='child assent unique constraint'),
        ),
        migrations.AddConstraint(
            model_name='childaddresshistory',
            constraint=models.UniqueConstraint(fields=('child_address_fk', 'child_fk', 'address_fk', 'revision_number'), name='child_address_history_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='childaddress',
            constraint=models.UniqueConstraint(fields=('child_fk', 'address_fk'), name='child address unique constraint'),
        ),
        migrations.AddConstraint(
            model_name='caregiversurvey',
            constraint=models.UniqueConstraint(fields=('caregiver_fk', 'survey_fk'), name='caregiver_survey_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='caregiversocialmediahistory',
            constraint=models.UniqueConstraint(fields=('caregiver_social_media_fk', 'caregiver_fk', 'social_media_fk', 'social_media_user_name', 'revision_number'), name='caregiver_social_media_history_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='caregiversocialmedia',
            constraint=models.UniqueConstraint(fields=('caregiver_fk', 'social_media_fk', 'social_media_user_name'), name='caregiver_social_media_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='caregiverphone',
            constraint=models.UniqueConstraint(fields=('caregiver_fk', 'phone_fk', 'phone_type'), name='caregiver_phone_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='caregiverpersonalcontact',
            constraint=models.UniqueConstraint(fields=('caregiver_fk', 'name_fk'), name='caregiver_personal_contact_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='caregivername',
            constraint=models.UniqueConstraint(fields=('name_fk', 'status', 'caregiver_fk'), name='caregiver_name_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='caregiveremail',
            constraint=models.UniqueConstraint(fields=('email_fk', 'caregiver_fk', 'email_type'), name='caregiver_email_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='caregiverchildrelation',
            constraint=models.UniqueConstraint(fields=('caregiver_fk', 'child_fk'), name='caregiver_child_relation_constraint'),
        ),
        migrations.AddConstraint(
            model_name='caregiverbiospecimen',
            constraint=models.UniqueConstraint(fields=('caregiver_fk', 'collection_fk'), name='caregiver_biospecimen_unique_constraint', violation_error_message="You can't have a duplicate item"),
        ),
        migrations.AddConstraint(
            model_name='caregiveraddresshistory',
            constraint=models.UniqueConstraint(fields=('caregiver_address_fk', 'caregiver_fk', 'address_fk', 'revision_number'), name='caregiver_address_history_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='caregiveraddress',
            constraint=models.UniqueConstraint(fields=('caregiver_fk', 'address_fk'), name='caregiver_address_constraint'),
        ),
        migrations.AddConstraint(
            model_name='addressmove',
            constraint=models.UniqueConstraint(fields=('address_fk', 'address_move_date'), name='address_move_unique_constraint'),
        ),
    ]
